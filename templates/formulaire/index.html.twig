{% extends 'base.html.twig' %}

{% block title %}Formulaire Stage{% endblock %}

{% block body %}

    <div class="example-wrapper formulaire">

        <div class="card col-11">
            <div class="card-body">
                {% if step==1 %}

                    <ul class="nav nav-process nav-process-circle">
                        <li class="nav-item processing">
                            Vous
                            <a class="nav-link" href="#"><i class="fa-solid fa-circle"></i></a>
                        </li>
                        <li class="nav-item">
                            L'entreprise
                            <a class="nav-link" href="#"><i class="fa-solid fa-circle"></i></a>
                        </li>
                        <li class="nav-item">
                            Le signataire
                            <a class="nav-link" href="#"><i class="fa-solid fa-circle"></i></a>
                        </li>
                        <li class="nav-item">
                            Le tuteur
                            <a class="nav-link" href="#"><i class="fa-solid fa-circle"></i></a>
                        </li>
                        <li class="nav-item">
                            L'adresse
                            <a class="nav-link" href="#"><i class="fa-solid fa-circle"></i></a>
                        </li>
                        <li class="nav-item">
                            Le stage
                            <a class="nav-link" href="#"><i class="fa-solid fa-circle"></i></a>
                        </li>
                    </ul>

                    <h2>Vos informations</h2>
                    <p class="form-info">Merci de vérifier vos informations ci-dessous.</p>
                    <p class="form-text mb-0 help-text">La complétion des champs marqués d'un astérisque (*) est
                        obligatoire.</p>
                    <div class="form-rows">

                        <div class="form-main">
                            {{ form_start(form_vous) }}

                            {{ form_row(form_vous.etudiant.intituleSecuriteSociale) }}
                            {{ form_row(form_vous.etudiant.adresseSecuriteSociale) }}
                        </div>

                        <div class="form-group-adresse">
                            <label for="adresse" class="form-label">Votre adresse :</label> <br>
                            <input type="text" id="adresse" class="form-control" autocomplete="off">
                            <ul id="adresseliste">
                            </ul>

                            <hr>

                            <div class="form-champs-adresse">
                                {{ form_row(form_vous.etudiant.adresseEtudiant.adresse1) }}
                                {{ form_row(form_vous.etudiant.adresseEtudiant.adresse2) }}
                                {{ form_row(form_vous.etudiant.adresseEtudiant.adresse3) }}
                                {{ form_row(form_vous.etudiant.adresseEtudiant.code_postal) }}
                                {{ form_row(form_vous.etudiant.adresseEtudiant.ville) }}
                            </div>

                            <div class="form-btn-verif">
                                {{ form_row(form_vous.etudiant.adresseEtudiant.modif_adresse) }}
                                <p class="form-text mb-0 help-text">Si l'adresse n'est pas disponible, merci de la
                                    saisir
                                    manuellement en cliquant sur ce bouton</p>
                            </div>
                        </div>

                        <hr>

                        <div class="form-main">
                            {{ form_row(form_vous.etudiant.tel2) }}
                            {{ form_row(form_vous.etudiant.mailPerso) }}
                        </div>

                        <div class="form-btn-alone">
                            <div class="form-btn-help">
                                {{ form_row(form_vous.suivant) }}
                                <p class="form-text mb-0 help-text">Les données saisies seront sauvegardées.</p>
                            </div>
                        </div>

                        {{ form_end(form_vous) }}
                    </div>

                    <script defer>
                        window.addEventListener('load', () => {
                            //---------------------------------------------------------------------------
                            //---------------------------------------------------------------------------
                            // Utilisation de l'API pour récupérer les villes relatives aux codes postaux
                            //---------------------------------------------------------------------------
                            //---------------------------------------------------------------------------


                            // if form_type_vous_cp_vous != focus -> var cp => valeur saisie : form_type_vous_cp_vous
                            document.getElementById('form_type_vos_informations_etudiant_adresseEtudiant_code_postal').addEventListener('blur', (e) => {
                                let cp = e.currentTarget.value

                                // url : liste communes / cp saisi -> inject dans data => data.json
                                fetch('https://apicarto.ign.fr/api/codes-postaux/communes/' + cp)
                                    .then((data) => {
                                        return data.json()
                                    })

                                    .then((data) => {
                                        // input "ville" = var ville
                                        let ville = document.getElementById('form_type_vos_informations_etudiant_adresseEtudiant_ville')
                                        // var options = éléments html "option" de la liste déroulante
                                        let options = document.querySelectorAll('#form_type_vos_informations_etudiant_adresseEtudiant_ville option')

                                        options.forEach((option) => {
                                            option.remove()
                                        })

                                        data.forEach(element => {
                                            let opt1 = document.createElement("option")
                                            opt1.text = element.nomCommune
                                            opt1.value = element.nomCommune
                                            ville.append(opt1)
                                            console.log(ville)
                                            console.log(element.nomCommune)
                                        })
                                        ;
                                    })
                            })

                            //---------------------------------------------------------------------------
                            //---------------------------------------------------------------------------
                            // Bouton qui compare les valeurs saisies avec les valeurs de l'API pour vérifier si l'adresse existe
                            //---------------------------------------------------------------------------
                            //---------------------------------------------------------------------------
                            //
                            // document.getElementById('form_type_vos_informations_etudiant_adresseEtudiant_verif_adresse').addEventListener('click', (e) => {
                            //     let adss = document.getElementById('form_type_vos_informations_etudiant_adresseEtudiant_adresse1').value
                            //     let cp = document.getElementById('form_type_vos_informations_etudiant_adresseEtudiant_code_postal').value
                            //     let ville = document.getElementById('form_type_vos_informations_etudiant_adresseEtudiant_ville').value
                            //     let adresse = adss + ' ' + cp + ' ' + ville;
                            //
                            //     fetch('https://api-adresse.data.gouv.fr/search/?q=' + adresse)
                            //         .then((data) => {
                            //             return data.json()
                            //         })
                            //         .then((data) => {
                            //             console.log(data)
                            //
                            //             data.features.forEach(element => {
                            //                 console.log(element.properties.label)
                            //             })
                            //         })
                            // })

                            //---------------------------------------------------------------------------
                            //---------------------------------------------------------------------------
                            // Bouton qui permet de modifier l'adresse
                            //---------------------------------------------------------------------------
                            //---------------------------------------------------------------------------

                            document.getElementById('form_type_vos_informations_etudiant_adresseEtudiant_modif_adresse').addEventListener('click', (e) => {
                                let adss = document.getElementById('form_type_vos_informations_etudiant_adresseEtudiant_adresse1')
                                let adssSuite = document.getElementById('form_type_vos_informations_etudiant_adresseEtudiant_adresse2')
                                let adssComplement = document.getElementById('form_type_vos_informations_etudiant_adresseEtudiant_adresse3')
                                let cp = document.getElementById('form_type_vos_informations_etudiant_adresseEtudiant_code_postal')
                                let ville = document.getElementById('form_type_vos_informations_etudiant_adresseEtudiant_ville')

                                adss.disabled = false
                                adssSuite.disabled = false
                                adssComplement.disabled = false
                                cp.disabled = false
                                ville.disabled = false
                            })


                            //---------------------------------------------------------------------------
                            //---------------------------------------------------------------------------
                            // Système d'autocomplétion de l'adresse en relation avec l'API
                            //---------------------------------------------------------------------------
                            //---------------------------------------------------------------------------

                            document.getElementById('adresse').addEventListener('keyup', (e) => {
                                let adresseSuite = e.currentTarget.value;

                                // On récupère l'api et on y injecte la saisie de l'utilisateur
                                fetch('https://api-adresse.data.gouv.fr/search/?q=' + adresseSuite + '&type=&autocomplete=1')
                                    //on l'injecte dans data et on la transforme en json
                                    .then((data) => {
                                        return data.json()
                                    })
                                    .then((data) => {
                                        console.log(data)

                                        let options = document.querySelectorAll('#adresseliste li')
                                        let adresseliste = document.getElementById('adresseliste')

                                        options.forEach((option) => {
                                            option.remove()
                                        })

                                        data.features.forEach(element => {
                                            console.log(element.properties.label)
                                            let autoCompleteOpt = document.createElement("li")
                                            autoCompleteOpt.innerHTML = element.properties.label
                                            autoCompleteOpt.dataset.name = element.properties.name
                                            autoCompleteOpt.dataset.city = element.properties.city
                                            autoCompleteOpt.dataset.postcode = element.properties.postcode
                                            autoCompleteOpt.classList.add('item')
                                            adresseliste.append(autoCompleteOpt)
                                        })
                                        document.querySelectorAll('.item').forEach((event) => {
                                            event.addEventListener('click', (e) => {
                                                console.log(e)
                                                document.getElementById('form_type_vos_informations_etudiant_adresseEtudiant_ville').innerHTML = ''
                                                let adresse = e.currentTarget
                                                console.log(adresse.dataset.city)
                                                document.getElementById('form_type_vos_informations_etudiant_adresseEtudiant_adresse1').value = adresse.dataset.name
                                                document.getElementById('form_type_vos_informations_etudiant_adresseEtudiant_code_postal').value = adresse.dataset.postcode
                                                let opt1 = document.createElement("option")
                                                opt1.text = adresse.dataset.city
                                                opt1.value = adresse.dataset.city
                                                document.getElementById('form_type_vos_informations_etudiant_adresseEtudiant_ville').append(opt1)

                                            })
                                        })
                                    })
                            })


                            //---------------------------------------------------------------------------
                            //---------------------------------------------------------------------------
                            // traitement de formulaire avec interception du submit, ajout de données et soumission du formulaire
                            //---------------------------------------------------------------------------
                            //---------------------------------------------------------------------------

                            const formElem = document.forms['form_type_vos_informations'] //récupération du formulaire, par son name

                            formElem.addEventListener('submit', async (e) => { //on détecte lorsque le formulaire est soumis
                                console.log('submit')
                                e.preventDefault() //on empèche qu'il soit envoyé
                                const formData = new FormData(formElem) //on construit un objet formData avec les éléments du formulaire
                                formData.set('form_type_vos_informations[etudiant][adresseEtudiant][adresse1]', document.getElementById('form_type_vos_informations_etudiant_adresseEtudiant_adresse1').value); //on ajoute un élément dans le formulaire en récupérant les données d'un champs disabled

                                formData.set('form_type_vos_informations[etudiant][adresseEtudiant][code_postal]', document.getElementById('form_type_vos_informations_etudiant_adresseEtudiant_code_postal').value);
                                formData.set('form_type_vos_informations[etudiant][adresseEtudiant][ville]', document.getElementById('form_type_vos_informations_etudiant_adresseEtudiant_ville').value);


                                console.log(formData.get('form_type_vos_informations[etudiant][adresseEtudiant][adresse1]')) //pour tester que ca fonctionne
                                console.log(formData.get('form_type_vos_informations[etudiant][adresseEtudiant][code_postal]'))
                                console.log(formData.get('form_type_vos_informations[etudiant][adresseEtudiant][ville]'))

                                console.log(formData)

                                let response = await fetch(formElem.action, { //on soumet de nouveau le formulaire, mais on doit simuler tout le processus en récupérant le lien dans action
                                    method: 'POST', //méthode en post (on pourrait dire aussi formElem.method)
                                    body: formData, //on passe les données avec l'objet créé plus haut
                                })
                                    .then((data) => {
                                        console.log(data)
                                        // if(data.status === 200){
                                            return data.json();
                                        // }
                                        // return {
                                        //     json: data.json(),
                                        //     status: data.status
                                        // }
                                    })
                                    .then((data) => {
                                        // console.log(data)
                                        if (data.route) {
                                            window.location.href = data.route; //on redirige vers la page entreprise/ID
                                        }
                                        else {
                                            console.log(data)
                                            afficheErrors(data, "form_type_vos_informations_etudiant_")
                                        }

                                    })
                                    .catch((error) => {
                                        console.log(error)
                                    })

                            })
                        })


                        function afficheErrors(errors, champ)
                        {
                            for(error in errors){
                                console.log(error);
                                // let errorDiv = document.getElementById(champ + error).value;
                                // document.getElementById(champ+ error).classList.add('is-invalid');
                                document.getElementById(champ+ error).parentElement.innerHTML += "<div >"+errors[error]+"</div>";
                                // document.getElementById(champ + error).value = errorDiv
                            }
                        }

                    </script>


                    {% elseif step==2 %}

                    <ul class="nav nav-process nav-process-circle">
                        <li class="nav-item complete">
                            Vous
                            <a class="nav-link" href="{{ path('app_formulaire') }}"><i
                                        class="fa-solid fa-circle"></i></a>
                        </li>
                        <li class="nav-item processing">
                            L'entreprise
                            <a class="nav-link" href="#"><i class="fa-solid fa-circle"></i></a>
                        </li>
                        <li class="nav-item">
                            Le signataire
                            <a class="nav-link" href="#"><i class="fa-solid fa-circle"></i></a>
                        </li>
                        <li class="nav-item">
                            Le tuteur
                            <a class="nav-link" href="#"><i class="fa-solid fa-circle"></i></a>
                        </li>
                        <li class="nav-item">
                            L'adresse
                            <a class="nav-link" href="#"><i class="fa-solid fa-circle"></i></a>
                        </li>
                        <li class="nav-item">
                            Le stage
                            <a class="nav-link" href="#"><i class="fa-solid fa-circle"></i></a>
                        </li>
                    </ul>

                    <h2>L'entreprise d'accueil</h2>
                    <p class="form-text mb-0 help-text">La complétion des champs marqués d'un astérisque (*) est
                        obligatoire.</p>
                    <div {{ stimulus_controller('formulaire', {url:path('app_stimulus_modal_vous', {id:id.id})}) }}>

                        <div data-formulaire-target="connect">
                            <div class="form-rows">
                                <div class="form-main">
                                    {{ form_start(form_entreprise) }}
                                    {{ form_row(form_entreprise.entreprise.siret) }}
                                    {{ form_row(form_entreprise.entreprise.raison_sociale) }}
                                </div>

                                <div class="form-group-adresse">
                                    <label for="adresseEntreprise" class="form-label">Adresse :</label> <br>
                                    <input type="text" id="adresseEntreprise" class="form-control">
                                    <ul id="adresselisteEntreprise">
                                    </ul>

                                    <hr>

                                    <div class="form-champs-adresse">
                                        {{ form_row(form_entreprise.entreprise.adresse.adresse1) }}
                                        {{ form_row(form_entreprise.entreprise.adresse.adresse2) }}
                                        {{ form_row(form_entreprise.entreprise.adresse.adresse3) }}
                                        {{ form_row(form_entreprise.entreprise.adresse.code_postal) }}
                                        {{ form_row(form_entreprise.entreprise.adresse.ville) }}
                                    </div>
                                    <div class="form-btn-verif">
                                        {{ form_row(form_entreprise.entreprise.adresse.modif_adresse) }}
                                        <p class="form-text mb-0 help-text">Si l'adresse n'existe pas, veuillez la
                                            saisir
                                            manuellement en cliquant sur ce
                                            bouton.</p>
                                    </div>
                                </div>

                                <hr>

                                <div class="form-btn-multiple">
                                    <div class="form-btn-help-precedent">
                                        {{ form_row(form_entreprise.retour) }}
                                        <p class="form-text mb-0 help-text">Les données saisies seront sauvegardées.</p>
                                    </div>
                                    <div class="form-btn-help-suivant">
                                        {{ form_row(form_entreprise.suivant) }}
                                        <p class="form-text mb-0 help-text">Les données saisies seront sauvegardées.</p>
                                    </div>
                                </div>

                            </div>
                        </div>
                        {{ include('_modal.html.twig', {
                            modalTitle: 'Récapitulatif de vos informations',
                            modalRetour: 'app_formulaire',
                        }) }}
                    </div>


                    <script defer>
                        window.addEventListener('load', () => {
                            //---------------------------------------------------------------------------
                            //---------------------------------------------------------------------------
                            // Utilisation de l'API pour récupérer les villes relatives aux codes postaux
                            //---------------------------------------------------------------------------
                            //---------------------------------------------------------------------------


                            // if form_type_vous_cp_vous != focus -> var cp => valeur saisie : form_type_vous_cp_vous
                            document.getElementById('form_type_entreprise_entreprise_adresse_code_postal').addEventListener('blur', (e) => {
                                let cp = e.currentTarget.value

                                // url : liste communes / cp saisi -> inject dans data => data.json
                                fetch('https://apicarto.ign.fr/api/codes-postaux/communes/' + cp)
                                    .then((data) => {
                                        return data.json()
                                    })

                                    .then((data) => {
                                        // input "ville" = var ville
                                        let ville = document.getElementById('form_type_entreprise_entreprise_adresse_ville')
                                        // var options = éléments html "option" de la liste déroulante
                                        let options = document.querySelectorAll('#form_type_entreprise_entreprise_adresse_ville option')

                                        options.forEach((option) => {
                                            option.remove()
                                        })

                                        data.forEach(element => {
                                            let opt1 = document.createElement("option")
                                            opt1.text = element.nomCommune
                                            opt1.value = element.nomCommune
                                            ville.append(opt1)
                                            console.log(ville)
                                            console.log(element.nomCommune)
                                        })
                                        ;
                                    })
                            })

                            //---------------------------------------------------------------------------
                            //---------------------------------------------------------------------------
                            // Bouton qui compare les valeurs saisies avec les valeurs de l'API pour vérifier si l'adresse existe
                            //---------------------------------------------------------------------------
                            //---------------------------------------------------------------------------

                            // document.getElementById('form_type_entreprise_entreprise_adresse_verif_adresse').addEventListener('click', (e) => {
                            //     let adss = document.getElementById('form_type_entreprise_entreprise_adresse_adresse1').value
                            //     let cp = document.getElementById('form_type_entreprise_entreprise_adresse_code_postal').value
                            //     let ville = document.getElementById('form_type_entreprise_entreprise_adresse_ville').value
                            //     let adresse = adss + ' ' + cp + ' ' + ville;
                            //
                            //     fetch('https://api-adresse.data.gouv.fr/search/?q=' + adresse)
                            //         .then((data) => {
                            //             return data.json()
                            //         })
                            //         .then((data) => {
                            //             console.log(data)
                            //
                            //             data.features.forEach(element => {
                            //                 console.log(element.properties.label)
                            //             })
                            //         })
                            // })

                            //---------------------------------------------------------------------------
                            //---------------------------------------------------------------------------
                            // Bouton qui permet de modifier l'adresse
                            //---------------------------------------------------------------------------
                            //---------------------------------------------------------------------------

                            document.getElementById('form_type_entreprise_entreprise_adresse_modif_adresse').addEventListener('click', (e) => {
                                let adss = document.getElementById('form_type_entreprise_entreprise_adresse_adresse1')
                                let adssSuite = document.getElementById('form_type_entreprise_entreprise_adresse_adresse2')
                                let adssComplement = document.getElementById('form_type_entreprise_entreprise_adresse_adresse3')
                                let cp = document.getElementById('form_type_entreprise_entreprise_adresse_code_postal')
                                let ville = document.getElementById('form_type_entreprise_entreprise_adresse_ville')

                                adss.disabled = false
                                adssSuite.disabled = false
                                adssComplement.disabled = false
                                cp.disabled = false
                                ville.disabled = false
                            })

                            //---------------------------------------------------------------------------
                            //---------------------------------------------------------------------------
                            // Système d'autocomplétion de l'adresse en relation avec l'API
                            //---------------------------------------------------------------------------
                            //---------------------------------------------------------------------------

                            document.getElementById('adresseEntreprise').addEventListener('keyup', (e) => {
                                let adresseSuite = e.currentTarget.value;

                                // On récupère l'api et on y injecte la saisie de l'utilisateur
                                fetch('https://api-adresse.data.gouv.fr/search/?q=' + adresseSuite + '&type=&autocomplete=1')
                                    //on l'injecte dans data et on la transforme en json
                                    .then((data) => {
                                        return data.json()
                                    })
                                    .then((data) => {
                                        console.log(data)

                                        let options = document.querySelectorAll('#adresselisteEntreprise li')
                                        let adresselisteEntreprise = document.getElementById('adresselisteEntreprise')

                                        options.forEach((option) => {
                                            option.remove()
                                        })

                                        data.features.forEach(element => {
                                            console.log(element.properties.label)
                                            let autoCompleteOpt = document.createElement("li")
                                            autoCompleteOpt.innerHTML = element.properties.label
                                            autoCompleteOpt.dataset.name = element.properties.name
                                            autoCompleteOpt.dataset.city = element.properties.city
                                            autoCompleteOpt.dataset.postcode = element.properties.postcode
                                            autoCompleteOpt.classList.add('item')
                                            adresselisteEntreprise.append(autoCompleteOpt)
                                        })
                                        document.querySelectorAll('.item').forEach((event) => {
                                            event.addEventListener('click', (e) => {
                                                console.log(e)
                                                document.getElementById('form_type_entreprise_entreprise_adresse_ville').innerHTML = ''
                                                let adresse = e.currentTarget
                                                console.log(adresse.dataset.city)
                                                document.getElementById('form_type_entreprise_entreprise_adresse_adresse1').value = adresse.dataset.name
                                                document.getElementById('form_type_entreprise_entreprise_adresse_code_postal').value = adresse.dataset.postcode
                                                let opt1 = document.createElement("option")
                                                opt1.text = adresse.dataset.city
                                                opt1.value = adresse.dataset.city
                                                document.getElementById('form_type_entreprise_entreprise_adresse_ville').append(opt1)
                                            })
                                        })
                                    })
                            })

                            //---------------------------------------------------------------------------
                            //---------------------------------------------------------------------------
                            // traitement de formulaire avec interception du submit, ajout de données et soumission du formulaire
                            //---------------------------------------------------------------------------
                            //---------------------------------------------------------------------------

                            const formElemEntreprise = document.forms['form_type_entreprise'] //récupération du formulaire, par son name

                            formElemEntreprise.addEventListener('submit', async (e) => { //on détecte lorsque le formulaire est soumis
                                e.preventDefault() //on empèche qu'il soit envoyé
                                const formData = new FormData(formElemEntreprise) //on construit un objet formData avec les éléments du formulaire
                                formData.set('form_type_entreprise[entreprise][adresse][adresse1]', document.getElementById('form_type_entreprise_entreprise_adresse_adresse1').value); //on ajoute un élément dans le formulaire en récupérant les données d'un champs disabled

                                formData.set('form_type_entreprise[entreprise][adresse][code_postal]', document.getElementById('form_type_entreprise_entreprise_adresse_code_postal').value);

                                formData.set('form_type_entreprise[entreprise][adresse][ville]', document.getElementById('form_type_entreprise_entreprise_adresse_ville').value);

                                formData.set('button', e.submitter.id)
                                console.log(e)

                                console.log(formData.get('form_type_entreprise[entreprise][adresse][adresse1]')) //pour tester que ca fonctionne
                                console.log(formData.get('form_type_entreprise[entreprise][adresse][code_postal]'))
                                console.log(formData.get('form_type_entreprise[entreprise][adresse][ville]'))

                                let response = await fetch(formElemEntreprise.action, { //on soumet de nouveau le formulaire, mais on doit simuler tout le processus en récupérant le lien dans action
                                    method: 'POST', //méthode en post (on pourrait dire aussi formElemEntreprise.method)
                                    body: formData, //on passe les données avec l'objet créé plus haut
                                })
                                    .then((data) => {
                                        return data.json()
                                    })
                                    .then((data) => {
                                        console.log(data)
                                        window.location.href = data.route;
                                    })
                            })
                        })

                    </script>

                    {% elseif step==3 %}

                    <ul class="nav nav-process nav-process-circle">
                        <li class="nav-item complete">
                            Vous
                            <a class="nav-link" href="{{ path('app_formulaire') }}"><i
                                        class="fa-solid fa-circle"></i></a>
                        </li>
                        <li class="nav-item complete">
                            L'entreprise
                            <a class="nav-link" href="{{ path('app_formulaireEntreprise', { id:id.id }) }}"><i
                                        class="fa-solid fa-circle"></i></a>
                        </li>
                        <li class="nav-item processing">
                            Le signataire
                            <a class="nav-link" href="#"><i class="fa-solid fa-circle"></i></a>
                        </li>
                        <li class="nav-item">
                            Le tuteur
                            <a class="nav-link" href="#"><i class="fa-solid fa-circle"></i></a>
                        </li>
                        <li class="nav-item">
                            L'adresse
                            <a class="nav-link" href="#"><i class="fa-solid fa-circle"></i></a>
                        </li>
                        <li class="nav-item">
                            Le stage
                            <a class="nav-link" href="#"><i class="fa-solid fa-circle"></i></a>
                        </li>
                    </ul>

                    <h2>Le.La responsable de l'entreprise (Signataire de la convention)</h2>
                    <p class="form-text mb-0 help-text">La complétion des champs marqués d'un astérisque (*) est
                        obligatoire.</p>

                    <div {{ stimulus_controller('formulaire', {url:path('app_stimulus_modal_entreprise', {id:id.id})}) }}>

                        <div data-formulaire-target="connect">
                            <div class="form-rows">
                                <div class="form-main">
                                    {{ form_start(form_responsable) }}

                                    {{ form_row(form_responsable.prenom) }}
                                    {{ form_row(form_responsable.nom) }}
                                    {{ form_row(form_responsable.fonction) }}
                                    {{ form_row(form_responsable.email) }}
                                    {{ form_row(form_responsable.telephone) }}
                                    {{ form_row(form_responsable.portable) }}
                                </div>

                                <div class="form-btn-multiple">
                                    <div class="form-btn-help-precedent">
                                        {{ form_row(form_responsable.retour) }}
                                        <p class="form-text mb-0 help-text">Les données saisies seront sauvegardées.</p>
                                    </div>
                                    <div class="form-btn-help-suivant">
                                        {{ form_row(form_responsable.suivant) }}
                                        <p class="form-text mb-0 help-text">Les données saisies seront sauvegardées.</p>
                                    </div>
                                </div>
                            </div>
                        </div>

                        {{ include('_modal.html.twig', {
                            modalTitle: 'Récapitulatif des informations de l\'entreprise',
                            modalRetour: 'app_formulaireEntreprise',
                        }) }}
                    </div>

                    <script defer>
                        window.addEventListener('load', () => {

                            //---------------------------------------------------------------------------
                            //---------------------------------------------------------------------------
                            // traitement de formulaire avec interception du submit, ajout de données et soumission du formulaire
                            //---------------------------------------------------------------------------
                            //---------------------------------------------------------------------------

                            const formElemResponsable = document.forms['responsable'] //récupération du formulaire, par son name

                            formElemResponsable.addEventListener('submit', async (e) => { //on détecte lorsque le formulaire est soumis
                                e.preventDefault() //on empèche qu'il soit envoyé
                                const formData = new FormData(formElemResponsable) //on construit un objet formData avec les éléments du formulaire
                                formData.set('responsable[prenom]', document.getElementById('responsable_prenom').value); //on ajoute un élément dans le formulaire en récupérant les données d'un champs disabled

                                formData.set('responsable[nom]', document.getElementById('responsable_nom').value);

                                formData.set('responsable[fonction]', document.getElementById('responsable_fonction').value);

                                formData.set('responsable[email]', document.getElementById('responsable_email').value);

                                formData.set('responsable[telephone]', document.getElementById('responsable_telephone').value);

                                formData.set('responsable[portable]', document.getElementById('responsable_portable').value);

                                formData.set('button', e.submitter.id)
                                console.log(e)

                                let response = await fetch(formElemResponsable.action, { //on soumet de nouveau le formulaire, mais on doit simuler tout le processus en récupérant le lien dans action
                                    method: 'POST', //méthode en post (on pourrait dire aussi formElemEntreprise.method)
                                    body: formData, //on passe les données avec l'objet créé plus haut
                                })
                                    .then((data) => {
                                        return data.json()
                                    })
                                    .then((data) => {
                                        console.log(data)
                                        window.location.href = data.route;
                                    })
                            })
                        })

                    </script>

                    {% elseif step==4 %}

                    <ul class="nav nav-process nav-process-circle">
                        <li class="nav-item complete">
                            Vous
                            <a class="nav-link" href="{{ path('app_formulaire') }}"><i
                                        class="fa-solid fa-circle"></i></a>
                        </li>
                        <li class="nav-item complete">
                            L'entreprise
                            <a class="nav-link" href="{{ path('app_formulaireEntreprise', { id:id.id }) }}"><i
                                        class="fa-solid fa-circle"></i></a>
                        </li>
                        <li class="nav-item complete">
                            Le signataire
                            <a class="nav-link" href="{{ path('app_formulaireResponsable', { id:id.id }) }}"><i
                                        class="fa-solid fa-circle"></i></a>
                        </li>
                        <li class="nav-item processing">
                            Le tuteur
                            <a class="nav-link" href="#"><i class="fa-solid fa-circle"></i></a>
                        </li>
                        <li class="nav-item">
                            L'adresse
                            <a class="nav-link" href="#"><i class="fa-solid fa-circle"></i></a>
                        </li>
                        <li class="nav-item">
                            Le stage
                            <a class="nav-link" href="#"><i class="fa-solid fa-circle"></i></a>
                        </li>
                    </ul>

                    <h2>Le tuteur entreprise</h2>
                    <p class="form-text mb-0 help-text">La complétion des champs marqués d'un astérisque (*) est
                        obligatoire.</p>

                    <div {{ stimulus_controller('formulaire', {url:path('app_stimulus_modal_responsable', {id:id.id})}) }}>

                        <div data-formulaire-target="connect">
                            <div class="form-rows">
                                <div class="form-main">
                                    {{ form_start(form_tuteur) }}
                                    <div class="form-btn-recup">
                                        {{ form_row(form_tuteur.recup_informations) }}
                                        <p>Si ces informations sont identiques à celles du signataire de la
                                            convention</p>
                                    </div>
                                    {{ form_row(form_tuteur.tuteur.prenom) }}
                                    {{ form_row(form_tuteur.tuteur.nom) }}
                                    {{ form_row(form_tuteur.tuteur.fonction) }}
                                    {{ form_row(form_tuteur.tuteur.email) }}
                                    {{ form_row(form_tuteur.tuteur.telephone) }}
                                    {{ form_row(form_tuteur.tuteur.portable) }}
                                </div>

                                <div class="form-btn-multiple">
                                    <div class="form-btn-help-precedent">
                                        {{ form_row(form_tuteur.retour) }}
                                        <p class="form-text mb-0 help-text">Les données saisies seront sauvegardées.</p>
                                    </div>
                                    <div class="form-btn-help-suivant">
                                        {{ form_row(form_tuteur.suivant) }}
                                        <p class="form-text mb-0 help-text">Les données saisies seront sauvegardées.</p>
                                    </div>
                                </div>
                            </div>
                        </div>

                        {{ include('_modal.html.twig', {
                            modalTitle: 'Récapitulatif des informations du responsable',
                            modalRetour: 'app_formulaireResponsable',
                        }) }}

                    </div>


                    {% elseif step==5 %}

                    <ul class="nav nav-process nav-process-circle">
                        <li class="nav-item complete">
                            Vous
                            <a class="nav-link" href="{{ path('app_formulaire') }}"><i
                                        class="fa-solid fa-circle"></i></a>
                        </li>
                        <li class="nav-item complete">
                            L'entreprise
                            <a class="nav-link" href="{{ path('app_formulaireEntreprise', { id:id.id }) }}"><i
                                        class="fa-solid fa-circle"></i></a>
                        </li>
                        <li class="nav-item complete">
                            Le signataire
                            <a class="nav-link" href="{{ path('app_formulaireResponsable', { id:id.id }) }}"><i
                                        class="fa-solid fa-circle"></i></a>
                        </li>
                        <li class="nav-item complete">
                            Le tuteur
                            <a class="nav-link" href="{{ path('app_formulaireTuteur', { id:id.id }) }}"><i
                                        class="fa-solid fa-circle"></i></a>
                        </li>
                        <li class="nav-item processing">
                            L'adresse
                            <a class="nav-link" href="#"><i class="fa-solid fa-circle"></i></a>
                        </li>
                        <li class="nav-item">
                            Le stage
                            <a class="nav-link" href="#"><i class="fa-solid fa-circle"></i></a>
                        </li>
                    </ul>

                    <h2>Adresse du lieu où le stage sera effectué</h2>
                    <p class="form-text mb-0 help-text">Les champs marqués d'un * sont obligatoires</p>

                    <div {{ stimulus_controller('formulaire', {url:path('app_stimulus_modal_tuteur', {id:id.id})}) }}>
                        {{ form_start(form_adss_stage) }}


                        <div data-formulaire-target="connect">
                            <div class="form-rows">
                                <div class="form-btn-recup">
                                    {{ form_row(form_adss_stage.recup_informations) }} <p>Si ces informations sont
                                        identiques à celles du signataire de la
                                        convention</p>
                                </div>
                                <div class="form-group-adresse">

                                    <label for="adresseStage" class="form-label">Adresse :</label> <br>
                                    <input type="text" id="adresseStage" class="form-control">
                                    <ul id="adresselisteStage">
                                    </ul>

                                    <hr>

                                    <div class="form-champs-adresse">
                                        {{ form_row(form_adss_stage.adresse_stage.adresse1) }}
                                        {{ form_row(form_adss_stage.adresse_stage.adresse2) }}
                                        {{ form_row(form_adss_stage.adresse_stage.adresse3) }}
                                        {{ form_row(form_adss_stage.adresse_stage.code_postal) }}
                                        {{ form_row(form_adss_stage.adresse_stage.ville) }}
                                    </div>

                                    <div class="form-btn-verif">
                                        {{ form_row(form_adss_stage.adresse_stage.modif_adresse) }}
                                        <p class="form-text mb-0 help-text">Si l'adresse n'est pas disponible, merci de
                                            la
                                            saisir
                                            manuellement en cliquant sur ce bouton</p>
                                    </div>
                                </div>

                                <hr>

                                <div class="adss_entreprise" style="display: none">
                                    {{ form(form_adss_stage.entreprise) }}
                                </div>
                                <div class="form-btn-multiple">
                                    <div class="form-btn-help-precedent">
                                        {{ form_row(form_adss_stage.retour) }}
                                        <p class="form-text mb-0 help-text">Les données saisies seront sauvegardées.</p>
                                    </div>
                                    <div class="form-btn-help-suivant">
                                        {{ form_row(form_adss_stage.suivant) }}
                                        <p class="form-text mb-0 help-text">Les données saisies seront sauvegardées.</p>
                                    </div>
                                </div>
                                {{ form_end(form_adss_stage) }}
                            </div>
                        </div>

                        {{ include('_modal.html.twig', {
                            modalTitle: 'Récapitulatif des informations du tuteur',
                            modalRetour: 'app_formulaireTuteur',
                        }) }}

                    </div>

                    <script defer>
                        window.addEventListener('load', () => {
                            //---------------------------------------------------------------------------
                            //---------------------------------------------------------------------------
                            // Utilisation de l'API pour récupérer les villes relatives aux codes postaux
                            //---------------------------------------------------------------------------
                            //---------------------------------------------------------------------------


                            // if form_type_vous_cp_vous != focus -> var cp => valeur saisie : form_type_vous_cp_vous
                            document.getElementById('form_type_adresse_stage_adresse_stage_code_postal').addEventListener('blur', (e) => {
                                let cp = e.currentTarget.value

                                // url : liste communes / cp saisi -> inject dans data => data.json
                                fetch('https://apicarto.ign.fr/api/codes-postaux/communes/' + cp)
                                    .then((data) => {
                                        return data.json()
                                    })

                                    .then((data) => {
                                        // input "ville" = var ville
                                        let ville = document.getElementById('form_type_adresse_stage_adresse_stage_ville')
                                        // var options = éléments html "option" de la liste déroulante
                                        let options = document.querySelectorAll('#form_type_adresse_stage_adresse_stage_ville option')

                                        options.forEach((option) => {
                                            option.remove()
                                        })

                                        data.forEach(element => {
                                            let opt1 = document.createElement("option")
                                            opt1.text = element.nomCommune
                                            opt1.value = element.nomCommune
                                            ville.append(opt1)
                                            console.log(ville)
                                            console.log(element.nomCommune)
                                        })
                                        ;
                                    })
                            })

                            //---------------------------------------------------------------------------
                            //---------------------------------------------------------------------------
                            // Bouton qui compare les valeurs saisies avec les valeurs de l'API pour vérifier si l'adresse existe
                            //---------------------------------------------------------------------------
                            //---------------------------------------------------------------------------

                            // document.getElementById('form_type_adresse_stage_adresse_stage_verif_adresse').addEventListener('click', (e) => {
                            //     let adss = document.getElementById('form_type_adresse_stage_adresse_stage_adresse1').value
                            //     let cp = document.getElementById('form_type_adresse_stage_adresse_stage_code_postal').value
                            //     let ville = document.getElementById('form_type_adresse_stage_adresse_stage_ville').value
                            //     let adresse = adss + ' ' + cp + ' ' + ville;
                            //
                            //     fetch('https://api-adresse.data.gouv.fr/search/?q=' + adresse)
                            //         .then((data) => {
                            //             return data.json()
                            //         })
                            //         .then((data) => {
                            //             console.log(data)
                            //
                            //             data.features.forEach(element => {
                            //                 console.log(element.properties.label)
                            //             })
                            //         })
                            // })

                            //---------------------------------------------------------------------------
                            //---------------------------------------------------------------------------
                            // Bouton qui permet de modifier l'adresse
                            //---------------------------------------------------------------------------
                            //---------------------------------------------------------------------------

                            document.getElementById('form_type_adresse_stage_adresse_stage_modif_adresse').addEventListener('click', (e) => {
                                let adss = document.getElementById('form_type_adresse_stage_adresse_stage_adresse1')
                                let adssSuite = document.getElementById('form_type_adresse_stage_adresse_stage_adresse2')
                                let adssComplement = document.getElementById('form_type_adresse_stage_adresse_stage_adresse3')
                                let cp = document.getElementById('form_type_adresse_stage_adresse_stage_code_postal')
                                let ville = document.getElementById('form_type_adresse_stage_adresse_stage_ville')

                                adss.disabled = false
                                adssSuite.disabled = false
                                adssComplement.disabled = false
                                cp.disabled = false
                                ville.disabled = false
                            })

                            //---------------------------------------------------------------------------
                            //---------------------------------------------------------------------------
                            // Système d'autocomplétion de l'adresse en relation avec l'API
                            //---------------------------------------------------------------------------
                            //---------------------------------------------------------------------------

                            document.getElementById('adresseStage').addEventListener('keyup', (e) => {
                                let adresseSuite = e.currentTarget.value;

                                // On récupère l'api et on y injecte la saisie de l'utilisateur
                                fetch('https://api-adresse.data.gouv.fr/search/?q=' + adresseSuite + '&type=&autocomplete=1')
                                    //on l'injecte dans data et on la transforme en json
                                    .then((data) => {
                                        return data.json()
                                    })
                                    .then((data) => {
                                        console.log(data)

                                        let options = document.querySelectorAll('#adresselisteStage li')
                                        let adresselisteStage = document.getElementById('adresselisteStage')

                                        options.forEach((option) => {
                                            option.remove()
                                        })

                                        data.features.forEach(element => {
                                            console.log(element.properties.label)
                                            let autoCompleteOpt = document.createElement("li")
                                            autoCompleteOpt.innerHTML = element.properties.label
                                            autoCompleteOpt.dataset.name = element.properties.name
                                            autoCompleteOpt.dataset.city = element.properties.city
                                            autoCompleteOpt.dataset.postcode = element.properties.postcode
                                            autoCompleteOpt.classList.add('item')
                                            adresselisteStage.append(autoCompleteOpt)
                                        })
                                        document.querySelectorAll('.item').forEach((event) => {
                                            event.addEventListener('click', (e) => {
                                                console.log(e)
                                                document.getElementById('form_type_adresse_stage_adresse_stage_ville').innerHTML = ''
                                                let adresse = e.currentTarget
                                                console.log(adresse.dataset.city)
                                                document.getElementById('form_type_adresse_stage_adresse_stage_adresse1').value = adresse.dataset.name
                                                document.getElementById('form_type_adresse_stage_adresse_stage_code_postal').value = adresse.dataset.postcode
                                                let opt1 = document.createElement("option")
                                                opt1.text = adresse.dataset.city
                                                opt1.value = adresse.dataset.city
                                                document.getElementById('form_type_adresse_stage_adresse_stage_ville').append(opt1)
                                            })
                                        })
                                    })
                            })

                            //---------------------------------------------------------------------------
                            //---------------------------------------------------------------------------
                            // traitement de formulaire avec interception du submit, ajout de données et soumission du formulaire
                            //---------------------------------------------------------------------------
                            //---------------------------------------------------------------------------

                            const formElemAdssStage = document.forms['form_type_adresse_stage'] //récupération du formulaire, par son name

                            formElemAdssStage.addEventListener('submit', async (e) => { //on détecte lorsque le formulaire est soumis
                                e.preventDefault() //on empèche qu'il soit envoyé
                                const formData = new FormData(formElemAdssStage) //on construit un objet formData avec les éléments du formulaire
                                formData.set('form_type_adresse_stage[adresse_stage][adresse1]', document.getElementById('form_type_adresse_stage_adresse_stage_adresse1').value); //on ajoute un élément dans le formulaire en récupérant les données d'un champ disabled

                                formData.set('form_type_adresse_stage[adresse_stage][code_postal]', document.getElementById('form_type_adresse_stage_adresse_stage_code_postal').value);

                                formData.set('form_type_adresse_stage[adresse_stage][ville]', document.getElementById('form_type_adresse_stage_adresse_stage_ville').value);

                                formData.set('button', e.submitter.id)
                                console.log(e)

                                console.log(formData.get('form_type_adresse_stage[adresse_stage][adresse1]')) //pour tester que ca fonctionne
                                console.log(formData.get('form_type_adresse_stage[adresse_stage][code_postal]'))
                                console.log(formData.get('form_type_adresse_stage[adresse_stage][ville]'))

                                let response = await fetch(formElemAdssStage.action, { //on soumet de nouveau le formulaire, mais on doit simuler tout le processus en récupérant le lien dans action
                                    method: 'POST', //méthode en post (on pourrait dire aussi formElemAdssStage.method)
                                    body: formData, //on passe les données avec l'objet créé plus haut
                                })
                                    .then((data) => {
                                        return data.json()
                                    })
                                    .then((data) => {
                                        console.log(data)
                                        window.location.href = data.route;
                                    })
                            })

                            //---------------------------------------------------------------------------
                            //--------------------------RECUP DATA ENTREPRISE----------------------------
                            //---------------------------------------------------------------------------

                            const formElemAdresseStage = document.forms['form_type_adresse_stage']
                            document.getElementById('form_type_adresse_stage_recup_informations').addEventListener('click', async (e) => {

                                document.getElementById('form_type_adresse_stage_adresse_stage_adresse1').value = document.getElementById('form_type_adresse_stage_entreprise_adresse_adresse1').value; //on ajoute un élément dans le formulaire en récupérant les données d'un champ
                                document.getElementById('form_type_adresse_stage_adresse_stage_adresse2').value = document.getElementById('form_type_adresse_stage_entreprise_adresse_adresse2').value;
                                document.getElementById('form_type_adresse_stage_adresse_stage_adresse3').value = document.getElementById('form_type_adresse_stage_entreprise_adresse_adresse3').value;
                                document.getElementById('form_type_adresse_stage_adresse_stage_code_postal').value = document.getElementById('form_type_adresse_stage_entreprise_adresse_code_postal').value;
                                // document.getElementById('form_type_adresse_stage_adresse_stage_ville').value = document.getElementById('form_type_adresse_stage_entreprise_adresse_ville').value;

                                let opt = document.createElement("option");
                                document.getElementById('form_type_adresse_stage_adresse_stage_ville').innerHTML = ''
                                opt.text = document.getElementById('form_type_adresse_stage_entreprise_adresse_ville').value
                                opt.value = document.getElementById('form_type_adresse_stage_entreprise_adresse_ville').value
                                console.log(opt)
                                document.getElementById('form_type_adresse_stage_adresse_stage_ville').append(opt)
                            })
                        })


                    </script>

                    {% elseif step==6 %}

                    <ul class="nav nav-process nav-process-circle">
                        <li class="nav-item complete">
                            Vous
                            <a class="nav-link" href="{{ path('app_formulaire') }}"><i
                                        class="fa-solid fa-circle"></i></a>
                        </li>
                        <li class="nav-item complete">
                            L'entreprise
                            <a class="nav-link" href="{{ path('app_formulaireEntreprise', { id:id.id }) }}"><i
                                        class="fa-solid fa-circle"></i></a>
                        </li>
                        <li class="nav-item complete">
                            Le signataire
                            <a class="nav-link" href="{{ path('app_formulaireResponsable', { id:id.id }) }}"><i
                                        class="fa-solid fa-circle"></i></a>
                        </li>
                        <li class="nav-item complete">
                            Le tuteur
                            <a class="nav-link" href="{{ path('app_formulaireTuteur', { id:id.id }) }}"><i
                                        class="fa-solid fa-circle"></i></a>
                        </li>
                        <li class="nav-item complete">
                            L'adresse
                            <a class="nav-link" href="{{ path('app_formulaireAdresseStage', { id:id.id }) }}"><i
                                        class="fa-solid fa-circle"></i></a>
                        </li>
                        <li class="nav-item processing">
                            Le stage
                            <a class="nav-link" href="#"><i class="fa-solid fa-circle"></i></a>
                        </li>
                    </ul>

                    <h2>Le Stage</h2>
                    <p>Les champs marqués d'un * sont obligatoires</p>

                    <div {{ stimulus_controller('formulaire', {url:path('app_stimulus_modal_adss_stage', {id:id.id})}) }}>

                        <div data-formulaire-target="connect">
                            <div class="form-rows">
                                <div class="form-main">
                                    {{ form_start(form_stage) }}
                                    {{ form_row(form_stage.date_debtut_stage) }}
                                    {{ form_row(form_stage.date_fin_stage) }}
                                    {{ form_row(form_stage.duree_jours_stage) }}
                                    {{ form_row(form_stage.service_stage_entreprise) }}
                                    <div class="mission">
                                        {{ form_row(form_stage.sujet_stage) }}
                                        {{ form_row(form_stage.activites) }}
                                    </div>
                                    {{ form_row(form_stage.periodes_interruptions) }}
                                    {{ form_row(form_stage.duree_hebdomadaire) }}
                                    <div class="mission">
                                        {{ form_row(form_stage.commentaire_duree_hebdomadaire) }}
                                        {{ form_row(form_stage.amenagement_stagec) }}
                                    </div>
                                    <div id="gratif">
                                        {{ form_row(form_stage.gratification) }}
                                    </div>

                                    <div id="gratif_opt1">
                                        {{ form_row(form_stage.gratification_periode) }}
                                    </div>
                                    <div id="gratif_opt2">
                                        {{ form_row(form_stage.gratification_montant) }}
                                    </div>
                                    {{ form_row(form_stage.avantages) }}
                                </div>
                                <hr>

                                <div class="form-btn-multiple">
                                    <div class="form-btn-help-precedent">
                                        {{ form_row(form_stage.retour) }}
                                        <p class="form-text mb-0 help-text">Les données saisies seront
                                            sauvegardées.</p>
                                    </div>
                                    <div class="form-btn-help-suivant">
                                        {{ form_row(form_stage.suivant) }}
                                        <p class="form-text mb-0 help-text">Les données saisies seront
                                            sauvegardées.</p>
                                    </div>
                                </div>
                            </div>
                        </div>

                        {{ include('_modal.html.twig', {
                            modalTitle: 'Récapitulatif des informations de l\'adresse du stage',
                            modalRetour: 'app_formulaireAdresseStage',
                        }) }}
                    </div>
                    <script defer lang="text/javascript" type="module">
                        window.addEventListener('load', () => {

                            flatpickr(".flatdatepicker", {
                                dateFormat: "d-m-Y",
                            });


                            {#                            //------------------------------------------------------------------------------ -#}
                            {#                            //-----------------------CALC NBR JOURS----------------------------------------- -#}

                            document.getElementById('form_type_stage_date_fin_stage').addEventListener('change', (e) => {
                                let dateDebutStage = document.getElementById('form_type_stage_date_debtut_stage').value
                                let dateFinStage = document.getElementById('form_type_stage_date_fin_stage').value

                                fetch('{{ path('calendar') }}', {
                                    method: 'Post',
                                    body: JSON.stringify({date1: dateDebutStage, date2: dateFinStage})
                                })
                                    .then((data) => {
                                        console.log(dateDebutStage)

                                        return data.json()
                                    })
                                    .then((data) => {
                                        console.log(data)
                                        document.getElementById('form_type_stage_duree_jours_stage').value = data.duree
                                    })
                                    .then(() => {
                                        //---------------------------------------------GRATIF OBLIGATOIRE---------------------------------------------
                                        // -----------------------------------------------------------------------------------------------------------
                                        let interval = document.getElementById('form_type_stage_duree_jours_stage')
                                        let gratification = document.getElementById('form_type_stage_gratification')
                                        let gratificationOui = document.getElementById('form_type_stage_gratification_0')
                                        let gratificationNon = document.getElementById('form_type_stage_gratification_1')
                                        if (interval.value >= 40) {
                                            gratificationOui.checked = true
                                            document.getElementById(('gratif_opt1')).style.display = 'block'
                                            document.getElementById(('gratif_opt2')).style.display = 'block'
                                            document.getElementById(('gratif')).style.display = 'block'
                                            document.querySelector('.form-check:nth-child(1)').style.display = 'block'
                                            document.querySelector('.form-check:nth-child(2)').style.display = 'none'

                                        } else {
                                            // gratification.value = 'non'
                                            gratificationNon.checked = true
                                            document.getElementById(('gratif_opt1')).style.display = 'none'
                                            document.getElementById(('gratif_opt2')).style.display = 'none'
                                            document.getElementById(('gratif')).style.display = 'block'
                                            document.querySelector('.form-check:nth-child(1)').style.display = 'block'
                                            document.querySelector('.form-check:nth-child(2)').style.display = 'block'

                                            gratificationOui.addEventListener('click', () => {
                                                document.getElementById(('gratif_opt1')).style.display = 'block'
                                                document.getElementById(('gratif_opt2')).style.display = 'block'
                                            })
                                            gratificationNon.addEventListener('click', () => {
                                                document.getElementById(('gratif_opt1')).style.display = 'none'
                                                document.getElementById(('gratif_opt2')).style.display = 'none'
                                            })
                                        }

                                    })
                            })


                            // document.getElementById('form_type_stage_date_fin_stage').addEventListener('change', (e) => {
                            //     let interval = document.getElementById('form_type_stage_duree_jours_stage')
                            //     let gratification = document.getElementById('form_type_stage_gratification')
                            //             if (interval.value >= 40) {
                            //                 gratification.value = 'oui'
                            //             } else {
                            //                 gratification.value = 'non'
                            //             }
                            // })

                        })

                        //
                        // let date1 = new Date(dateDebutStage)
                        // let date2 = new Date(dateFinStage)
                        //
                        // // console.log(date1)
                        // // console.log(date1.getTime())
                        // // console.log(date2.getTime())
                        //
                        // //calculate time difference
                        // var time_difference = date2.getTime() - date1.getTime();
                        //
                        // // console.log(time_difference)
                        //
                        // //calculate days difference by dividing total milliseconds in a day
                        // var days_difference = time_difference / (1000 * 60 * 60 * 24) + 1;
                        //
                        // // console.log(days_difference)
                        //
                        // document.getElementById('form_type_stage_duree_jours_stage').value = days_difference
                        // }})

                    </script>

                    {% elseif step==7 %}

                    <h2>Récapitulatif des informations saisies.</h2>

                    <table>
                        <tr>
                            <th>Vos informations</th>
                        </tr>
                        <tr>
                            <td>Organisme de sécurité sociale :</td>
                            <td>{{ id.etudiant.intituleSecuriteSociale }}</td>
                        </tr>
                        <tr>
                            <td>Adresse de l'organisme de sécurité sociale :</td>
                            <td>{{ id.etudiant.adresseSecuriteSociale }}</td>
                        </tr>
                        <tr>
                            <td>Votre adresse :</td>
                            <td>{{ id.etudiant.adresseEtudiant.adresse1 }}
                                {{ id.etudiant.adresseEtudiant.adresse2 }}
                                {{ id.etudiant.adresseEtudiant.adresse3 }}
                                {{ id.etudiant.adresseEtudiant.codePostal }}
                                {{ id.etudiant.adresseEtudiant.ville }}</td>
                        </tr>
                        <tr>
                            <td>Votre numéro de téléphone :</td>
                            <td>{{ id.etudiant.tel2 }}</td>
                        </tr>
                        <tr>
                            <td>Votre email personnel :</td>
                            <td>{{ id.etudiant.mailPerso }}</td>
                        </tr>
                        <tr>
                            <th>
                                L'entreprise
                            </th>
                        </tr>
                        <tr>
                            <td>N° de siret :</td>
                            <td>{{ id.entreprise.siret }}</td>
                        </tr>
                        <tr>
                            <td>Raison sociale :</td>
                            <td>{{ id.entreprise.raisonSociale }}</td>
                        </tr>
                        <tr>
                            <td>Adresse de l'entreprise :</td>
                            <td>{{ id.entreprise.adresse.adresse1 }}
                                {{ id.entreprise.adresse.adresse2 }}
                                {{ id.entreprise.adresse.adresse3 }}
                                {{ id.entreprise.adresse.codePostal }}
                                {{ id.entreprise.adresse.ville }}</td>
                        </tr>
                        <tr>
                            <th>
                                Le.La responsable (signataire de la convention)
                            </th>
                        </tr>
                        <tr>
                            <td>Prénom, Nom :</td>
                            <td>{{ id.entreprise.responsable.prenom|capitalize }} {{ id.entreprise.responsable.nom|capitalize }}</td>
                        </tr>
                        <tr>
                            <td>Fonction dans l'entreprise :</td>
                            <td>{{ id.entreprise.responsable.fonction }}</td>
                        </tr>
                        <tr>
                            <td>Email :</td>
                            <td>{{ id.entreprise.responsable.email }}</td>
                        </tr>
                        <tr>
                            <td>Téléphone :</td>
                            <td>{{ id.entreprise.responsable.telephone }}</td>
                        </tr>
                        <tr>
                            <td>Portable :</td>
                            <td>{{ id.entreprise.responsable.portable }}</td>
                        </tr>
                        <tr>
                            <th>
                                Le.La tuteur.trice
                            </th>
                        </tr>
                        <tr>
                            <td>Prénom, Nom :</td>
                            <td>{{ id.tuteur.prenom|capitalize }} {{ id.tuteur.nom|capitalize }}</td>
                        </tr>
                        <tr>
                            <td>Fonction dans l :</td>
                            <td>{{ id.tuteur.fonction }}</td>
                        </tr>
                        <tr>
                            <td>Email :</td>
                            <td>{{ id.tuteur.email }}</td>
                        </tr>
                        <tr>
                            <td>Téléphone :</td>
                            <td>{{ id.tuteur.telephone }}</td>
                        </tr>
                        <tr>
                            <td>Portable :</td>
                            <td>{{ id.tuteur.portable }}</td>
                        </tr>
                        <tr>
                            <th>
                                L'adresse du lieu où le stage sera effectué
                            </th>
                        </tr>
                        <tr>
                            <td>Adresse :</td>
                            <td>{{ id.adresseStage.adresse1 }}
                                {{ id.adresseStage.adresse2 }}
                                {{ id.adresseStage.adresse3 }}
                                {{ id.adresseStage.codePostal }}
                                {{ id.adresseStage.ville }}</td>
                        </tr>
                        <tr>
                            <th>
                                Le stage
                            </th>
                        </tr>
                        <tr>
                            <td>Date de début :</td>
                            <td>{{ id.dateDebtutStage|date('d-m-Y') }}</td>
                        </tr>
                        <tr>
                            <td>Date de fin :</td>
                            <td>{{ id.dateFinStage|date('d-m-Y') }}</td>
                        </tr>
                        <tr>
                            <td>Nombre de jours de stage :</td>
                            <td>{{ id.dureeJoursStage }} jours</td>
                        </tr>
                        <tr>
                            <td>Service dans l'entreprise :</td>
                            <td>{{ id.serviceStageEntreprise }}</td>
                        </tr>
                        <tr>
                            <td>Mission principale :</td>
                            <td>{{ id.sujetStage }}</td>
                        </tr>
                        <tr>
                            <td>Activités à réaliser :</td>
                            <td>{{ id.activites }}</td>
                        </tr>
                        <tr>
                            <td>Périodes d'interruptions :</td>
                            <td>{{ id.periodesInterruptions }}</td>
                        </tr>
                        <tr>
                            <td>Durée de travail hebdomadaire :</td>
                            <td>{{ id.dureeHebdomadaire }}</td>
                        </tr>
                        <tr>
                            <td>Commentaires sur la durée du travail :</td>
                            <td>{{ id.commentaireDureeHebdomadaire }}</td>
                        </tr>
                        <tr>
                            <td>Aménagement du stage :</td>
                            <td>{{ id.amenagementStagec }}</td>
                        </tr>
                        <tr>
                            <td>Gratification :</td>
                            <td>{{ id.gratification }}</td>
                        </tr>
                        <tr>
                            <td>Prériodicité de gratification :</td>
                            <td>{{ id.gratificationPeriode }}</td>
                        </tr>
                        <tr>
                            <td>Montant de la gratification :</td>
                            <td>{{ id.gratificationMontant }}</td>
                        </tr>
                        <tr>
                            <td>Avantages :</td>
                            <td>{{ id.avantages }}</td>
                        </tr>

                    </table>

                {% endif %}
            </div>
        </div>
    </div>
{% endblock %}

